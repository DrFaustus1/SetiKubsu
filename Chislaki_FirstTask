#include <iostream>
#include <fstream>
#include <vector>
#include <cmath>

using namespace std;

// Функция для чтения матрицы A и вектора b из файла
void readFromFile(const string& filename, vector<vector<double>>& A, vector<double>& b) {
    ifstream file(filename);
    if (!file.is_open()) {
        cerr << "Ошибка открытия файла!" << endl;
        exit(1);
    }

    int n;
    file >> n; // Читаем размерность системы

    A.resize(n, vector<double>(n));
    b.resize(n);

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            file >> A[i][j]; // Читаем элементы матрицы A
        }
        file >> b[i]; // Читаем элементы вектора b
    }

    file.close();
}

// Метод Зейделя 
vector<double> gaussSeidel(const vector<vector<double>>& A, const vector<double>& b, double tolerance = 1e-10, int maxIterations = 1000) {
    int n = A.size();
    vector<double> x(n, 0.0); // Начальное приближение

    for (int k = 0; k < maxIterations; ++k) {
        vector<double> x_old = x;

        for (int i = 0; i < n; ++i) {
            double sum = b[i];
            for (int j = 0; j < n; ++j) {
                if (j != i) {
                    sum -= A[i][j] * x[j];
                }
            }
            x[i] = sum / A[i][i]; // Обновляем значение x[i]
        }

        // Проверяем сходимость
        double max_diff = 0.0;
        for (int i = 0; i < n; ++i) {
            max_diff = max(max_diff, fabs(x[i] - x_old[i]));
        }
        if (max_diff < tolerance) {
            break;
        }
    }

    return x;
}

int main() {
    vector<vector<double>> A;
    vector<double> b;

    
    string filename = "input.txt"; 
    readFromFile(filename, A, b);


    vector<double> solution = gaussSeidel(A, b);

    cout << "Решение системы:" << endl;
    for (double x : solution) {
        cout << x << endl;
    }

    return 0;
}
